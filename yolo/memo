https://dev.classmethod.jp/articles/yolov7-train-with-customize-dataset/

この記事ベースで、自分好みにカスタマイズできそう。

このツールでトレーニングデータのアノテーションをできるということだ。

https://dev.classmethod.jp/articles/annotate_objects_in_image_with_cvat/


CVATの利用



git clone https://github.com/opencv/cvat
sudo docker build ./ -t cvat

cd cvat
sudo docker-compose up -d
sudo docker exec -it cvat_server bash -ic 'python3 ~/manage.py createsuperuser'

a@ai03:~/cvat$ sudo docker exec -it cvat_server bash -ic 'python3 ~/manage.py createsuperuser'
Username (leave blank to use 'django'): a
Email address: a
Error: Enter a valid email address.
Email address: a@a
Error: Enter a valid email address.
Email address: a@gmail.com
Password: 
Password (again): 
The password is too similar to the username.
This password is too short. It must contain at least 8 characters.
This password is too common.
Bypass password validation and create user anyway? [y/N]: y
Superuser created successfully.
a@ai03:~/cvat$ 


んで、一度ＧＰＵ系で失敗すると、２度めもすぐに失敗。やってられん

a@ai03:~/yolov7$ ./my_train2.sh 
++ python3 train_aux.py --workers 2 --batch-size 8 --data dataset/first/first.yaml --cfg cfg/training/yolov7-e6.yaml --weights yolov7-e6.pt --name yolov7-e6-first --hyp data/hyp.scratch.p6.yaml --epochs 30 --device cpu
YOLOR 🚀 v0.1-115-g072f76c torch 1.12.1+cu102 CPU

Namespace(adam=False, artifact_alias='latest', batch_size=8, bbox_interval=-1, bucket='', cache_images=False, cfg='cfg/training/yolov7-e6.yaml', data='dataset/first/first.yaml', device='cpu', entity=None, epochs=30, evolve=False, exist_ok=False, global_rank=-1, hyp='data/hyp.scratch.p6.yaml', image_weights=False, img_size=[640, 640], label_smoothing=0.0, linear_lr=False, local_rank=-1, multi_scale=False, name='yolov7-e6-first', noautoanchor=False, nosave=False, notest=False, project='runs/train', quad=False, rect=False, resume=False, save_dir='runs/train/yolov7-e6-first2', save_period=-1, single_cls=False, sync_bn=False, total_batch_size=8, upload_dataset=False, v5_metric=False, weights='yolov7-e6.pt', workers=2, world_size=1)
tensorboard: Start with 'tensorboard --logdir runs/train', view at http://localhost:6006/
hyperparameters: lr0=0.01, lrf=0.2, momentum=0.937, weight_decay=0.0005, warmup_epochs=3.0, warmup_momentum=0.8, warmup_bias_lr=0.1, box=0.05, cls=0.3, cls_pw=1.0, obj=0.7, obj_pw=1.0, iou_t=0.2, anchor_t=4.0, fl_gamma=0.0, hsv_h=0.015, hsv_s=0.7, hsv_v=0.4, degrees=0.0, translate=0.2, scale=0.9, shear=0.0, perspective=0.0, flipud=0.0, fliplr=0.5, mosaic=1.0, mixup=0.15, copy_paste=0.0, paste_in=0.15, loss_ota=1
Traceback (most recent call last):
  File "train_aux.py", line 612, in <module>
    train(hyp, opt, device, tb_writer)
  File "train_aux.py", line 71, in train
    run_id = torch.load(weights).get('wandb_id') if weights.endswith('.pt') and os.path.isfile(weights) else None
  File "/home/a/.local/lib/python3.8/site-packages/torch/serialization.py", line 712, in load
    return _load(opened_zipfile, map_location, pickle_module, **pickle_load_args)
  File "/home/a/.local/lib/python3.8/site-packages/torch/serialization.py", line 1049, in _load
    result = unpickler.load()
  File "/home/a/.local/lib/python3.8/site-packages/torch/serialization.py", line 1019, in persistent_load
    load_tensor(dtype, nbytes, key, _maybe_decode_ascii(location))
  File "/home/a/.local/lib/python3.8/site-packages/torch/serialization.py", line 1001, in load_tensor
    wrap_storage=restore_location(storage, location),
  File "/home/a/.local/lib/python3.8/site-packages/torch/serialization.py", line 175, in default_restore_location
    result = fn(storage, location)
  File "/home/a/.local/lib/python3.8/site-packages/torch/serialization.py", line 152, in _cuda_deserialize
    device = validate_cuda_device(location)
  File "/home/a/.local/lib/python3.8/site-packages/torch/serialization.py", line 136, in validate_cuda_device
    raise RuntimeError('Attempting to deserialize object on a CUDA '
RuntimeError: Attempting to deserialize object on a CUDA device but torch.cuda.is_available() is False. If you are running on a CPU-only machine, please use torch.load with map_location=torch.device('cpu') to map your storages to the CPU.
a@ai03:~/yolov7$ 




自分データでの学習がうまくいかない。
a@ai03:~/yolov7$ cat ./my_train.sh 
set -x
python3 train_aux.py --workers 2 --batch-size 8 \
  --data dataset/first/first.yaml \
  --cfg cfg/training/yolov7-e6.yaml \
  --weights 'yolov7-e6.pt' \
  --name yolov7-e6-first \
  --hyp data/hyp.scratch.p6.yaml \
  --epochs 300 \
  --device cpu
a@ai03:~/yolov7$ 



     Epoch   gpu_mem       box       obj       cls     total    labels  img_size
    46/299        0G   0.02365    0.0154         0   0.03905         2       640: 100%|█████████████████████████████████| 1/1 [00:02<00:00,  2.95s/it]
               Class      Images      Labels           P           R      mAP@.5  mAP@.5:.95: 100%|█████████████████████| 1/1 [00:00<00:00,  1.23it/s]
                 all           2           0           0           0           0           0

     Epoch   gpu_mem       box       obj       cls     total    labels  img_size
  0%|                                                                                                                           | 0/1 [00:01<?, ?it/s]
Traceback (most recent call last):
  File "train_aux.py", line 612, in <module>
    train(hyp, opt, device, tb_writer)
  File "train_aux.py", line 362, in train
    loss, loss_items = compute_loss_ota(pred, targets.to(device), imgs)  # loss scaled by batch_size
  File "/home/a/yolov7/utils/loss.py", line 1205, in __call__
    bs_aux, as_aux_, gjs_aux, gis_aux, targets_aux, anchors_aux = self.build_targets2(p[:self.nl], targets, imgs)
  File "/home/a/yolov7/utils/loss.py", line 1584, in build_targets2
    matching_bs[i] = torch.tensor([], device='cuda:0', dtype=torch.int64)
  File "/home/a/.local/lib/python3.8/site-packages/torch/cuda/__init__.py", line 217, in _lazy_init
    torch._C._cuda_init()
RuntimeError: No CUDA GPUs are available
a@ai03:~/yolov7$ 


なんで、epochが途中まで上手く言っている、途中で失敗するのか、、、

https://github.com/ultralytics/yolov5/issues/8012

30 epochs completed in 0.128 hours.

Optimizer stripped from runs/train/yolov7-e6-first/weights/last.pt, 221.4MB
Optimizer stripped from runs/train/yolov7-e6-first/weights/best.pt, 221.4MB
a@ai03:~/yolov7$ 

３０エポックだと上手く行く様子。

ただ、検証データでdetect試したがうまくいかん。馬の絵もダメ。なんか、全くだめなモデルになってしまった？
30エポックだとやっぱり足らんのか。。。しかし、上のエラーが出てしまう。。。

a@ai03:~/yolov7$ ./my_train2.sh 
++ python3 train_aux.py --workers 4 --batch-size 8 --data dataset/first/first.yaml --cfg cfg/training/yolov7-e6.yaml --weights yolov7-e6.pt --name yolov7-e6-first --hyp data/hyp.scratch.p6.yaml --epochs 30 --device cpu
YOLOR 🚀 v0.1-115-g072f76c torch 1.12.1+cu102 CPU

Namespace(adam=False, artifact_alias='latest', batch_size=8, bbox_interval=-1, bucket='', cache_images=False, cfg='cfg/training/yolov7-e6.yaml', data='dataset/first/first.yaml', device='cpu', entity=None, epochs=30, evolve=False, exist_ok=False, global_rank=-1, hyp='data/hyp.scratch.p6.yaml', image_weights=False, img_size=[640, 640], label_smoothing=0.0, linear_lr=False, local_rank=-1, multi_scale=False, name='yolov7-e6-first', noautoanchor=False, nosave=False, notest=False, project='runs/train', quad=False, rect=False, resume=False, save_dir='runs/train/yolov7-e6-first3', save_period=-1, single_cls=False, sync_bn=False, total_batch_size=8, upload_dataset=False, v5_metric=False, weights='yolov7-e6.pt', workers=4, world_size=1)
tensorboard: Start with 'tensorboard --logdir runs/train', view at http://localhost:6006/
hyperparameters: lr0=0.01, lrf=0.2, momentum=0.937, weight_decay=0.0005, warmup_epochs=3.0, warmup_momentum=0.8, warmup_bias_lr=0.1, box=0.05, cls=0.3, cls_pw=1.0, obj=0.7, obj_pw=1.0, iou_t=0.2, anchor_t=4.0, fl_gamma=0.0, hsv_h=0.015, hsv_s=0.7, hsv_v=0.4, degrees=0.0, translate=0.2, scale=0.9, shear=0.0, perspective=0.0, flipud=0.0, fliplr=0.5, mosaic=1.0, mixup=0.15, copy_paste=0.0, paste_in=0.15, loss_ota=1
Traceback (most recent call last):
  File "train_aux.py", line 612, in <module>
    train(hyp, opt, device, tb_writer)
  File "train_aux.py", line 71, in train
    run_id = torch.load(weights).get('wandb_id') if weights.endswith('.pt') and os.path.isfile(weights) else None
  File "/home/a/.local/lib/python3.8/site-packages/torch/serialization.py", line 712, in load
    return _load(opened_zipfile, map_location, pickle_module, **pickle_load_args)
  File "/home/a/.local/lib/python3.8/site-packages/torch/serialization.py", line 1049, in _load
    result = unpickler.load()
  File "/home/a/.local/lib/python3.8/site-packages/torch/serialization.py", line 1019, in persistent_load
    load_tensor(dtype, nbytes, key, _maybe_decode_ascii(location))
  File "/home/a/.local/lib/python3.8/site-packages/torch/serialization.py", line 1001, in load_tensor
    wrap_storage=restore_location(storage, location),
  File "/home/a/.local/lib/python3.8/site-packages/torch/serialization.py", line 175, in default_restore_location
    result = fn(storage, location)
  File "/home/a/.local/lib/python3.8/site-packages/torch/serialization.py", line 152, in _cuda_deserialize
    device = validate_cuda_device(location)
  File "/home/a/.local/lib/python3.8/site-packages/torch/serialization.py", line 136, in validate_cuda_device
    raise RuntimeError('Attempting to deserialize object on a CUDA '
RuntimeError: Attempting to deserialize object on a CUDA device but torch.cuda.is_available() is False. If you are running on a CPU-only machine, please use torch.load with map_location=torch.device('cpu') to map your storages to the CPU.
a@ai03:~/yolov7$ 


２回めを動かすとダメ。

colabの利用は、ＷＥＢ記事の例の操作をやると、80GBかかるということで、追加の課金が必要になる。
これは家族の了承を得るのが難しいため、自分のマシンのGPUをなんとか使えるようんするしかない。
